version: '3'

volumes:
    backend_database_volume:
    keycloak_database_volume:

networks:
    backend_network:
    frontend_network:

services:
    backend_database:
        container_name: evatool_backend_database
        image: mysql:8.0.24
        environment:
            MYSQL_DATABASE: evatooldb
            MYSQL_USER: ${BACKEND_DB_USER}
            MYSQL_PASSWORD: ${BACKEND_DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${BACKEND_DB_ROOT_PASSWORD}
        networks:
            - backend_network
        volumes:
            - backend_database_volume:/var/lib/mysql

    keycloak_database:
        container_name: evatool_keycloak_database
        image: postgres:13
        environment:
            POSTGRES_DB: keycloakdb
            POSTGRES_USER: ${AUTH_DB_USER}
            POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
            POSTGRES_ROOT_PASSWORD: ${AUTH_DB_ROOT_PASSWORD}
        networks:
            - backend_network
        volumes:
            - keycloak_database_volume:/var/lib/postgresql/data
        #entrypoint: "/bin/sh -c 'if ! ${AUTH_ENABLED}; then echo \"Auth is disabled, Im out\"; exit 0; fi'"

    backend:
        container_name: evatool_backend
        image: evatool/evatool-backend:${EVATOOL_VERSION}
        environment:
            SERVER_PROTOCOL: ${SERVER_PROTOCOL}
            SERVER_ADDR: ${SERVER_ADDR}
            BACKEND_DB_ADDR: backend_database
            BACKEND_DB: evatooldb
            BACKEND_DB_PORT: 3306
            BACKEND_DB_USER: ${BACKEND_DB_USER}
            BACKEND_DB_PASSWORD: ${BACKEND_DB_PASSWORD}
            AUTH_ENABLED: ${AUTH_ENABLED}
            AUTH_MULTI_TENANCY_ENABLED: ${AUTH_MULTI_TENANCY_ENABLED}
            AUTH_REGISTRATION_ENABLED: ${AUTH_REGISTRATION_ENABLED}
            AUTH_USER: ${AUTH_USER}
            AUTH_PASSWORD: ${AUTH_PASSWORD}
            AUTH_ADDR: ${AUTH_ADDR}
            AUTH_PORT: ${AUTH_PORT_INTERNAL_BACKEND}
            SSL_ENABLED: ${SSL_ENABLED}
            SERVER_DOMAIN: ${SERVER_DOMAIN}
            SSL_KEYSTORE_PASSWORD: ${SSL_KEYSTORE_PASSWORD}
        ports:
            - ${BACKEND_PORT}:8080
        networks:
            - backend_network
            - frontend_network
        depends_on:
            - backend_database
            - keycloak
        volumes:
            - ./data/certbot/conf/live/${SERVER_DOMAIN}/keystore.p12:/etc/letsencrypt/live/www.${SERVER_DOMAIN}/keystore.p12

    keycloak:
        container_name: evatool_keycloak
        image: quay.io/keycloak/keycloak:13.0.0
        environment:
            DB_VENDOR: POSTGRES
            DB_ADDR: keycloak_database
            DB_DATABASE: keycloakdb
            DB_PORT: 5432
            DB_USER: ${AUTH_DB_USER}
            DB_PASSWORD: ${AUTH_DB_PASSWORD}
            DB_SCHEMA: public
            KEYCLOAK_USER: ${AUTH_USER}
            KEYCLOAK_PASSWORD: ${AUTH_PASSWORD}
            KEYCLOAK_IMPORT: /opt/jboss/keycloak/imports/evatool-realm.json
        ports:
            - ${AUTH_PORT}:${AUTH_PORT_INTERNAL_KEYCLOAK}
        networks:
            - backend_network
        depends_on:
            - keycloak_database
        volumes:
            - ./keycloak:/opt/jboss/keycloak/imports
            - ./data/certbot/conf/live/${SERVER_DOMAIN}/fullchain.pem:/etc/x509/https/tls.crt
            - ./data/certbot/conf/live/${SERVER_DOMAIN}/privkey.pem:/etc/x509/https/tls.key
        #entrypoint: "/bin/sh -c 'if ! ${AUTH_ENABLED}; then echo \"Auth is disabled, Im out\"; exit 0; fi'"

    frontend:
        container_name: evatool_frontend
        image: evatool/evatool-frontend:${EVATOOL_VERSION}
        environment:
            SERVER_PROTOCOL: ${SERVER_PROTOCOL}
            SERVER_ADDR: ${SERVER_ADDR}
            BACKEND_PORT: ${BACKEND_PORT}
            DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE}
            USE_DEFAULT_OVER_BROWSER_LANGUAGE: ${USE_DEFAULT_OVER_BROWSER_LANGUAGE}
            AUTH_ENABLED: ${AUTH_ENABLED}
            AUTH_MULTI_TENANCY_ENABLED: ${AUTH_MULTI_TENANCY_ENABLED}
            AUTH_REGISTRATION_ENABLED: ${AUTH_REGISTRATION_ENABLED}
            AUTH_PORT: ${AUTH_PORT}
        ports:
            - ${FRONTEND_PORT}:80
            - ${FRONTEND_SECURE_PORT}:443
        # TODO The command freezes the container and makes the website unresponsive, but it is required for auto renewing the certificate.
        # It should be executed asynchronously to the original command. Same problem as above, original command/entrypoint is overwritten.
        # https://github.com/docker/compose/issues/3140
        #command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        networks:
            - frontend_network
        depends_on:
            - backend
        volumes:
            - ./nginx:/etc/nginx/conf.d${SSL_DISABLE_FOLDER}
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot

    certbot:
        container_name: evatool_certbot
        image: certbot/certbot
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'if ! ${SSL_ENABLED}; then echo \"SSL is disabled, Im out\"; exit 0; fi; trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
